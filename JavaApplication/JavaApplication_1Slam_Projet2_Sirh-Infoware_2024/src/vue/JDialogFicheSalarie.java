package vue;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import modele.dao.DaoCategorie;
import modele.dao.DaoFormation;
import modele.dao.DaoService;
import modele.metier.Categorie;
import modele.metier.Formation;
import modele.metier.Salarie;
import modele.metier.Service;

/**
 * GUI d'affichage des données d'un salarié
 *
 * @author btssio
 */
public class JDialogFicheSalarie extends javax.swing.JDialog {

    private Salarie leSalarie;
    private DefaultComboBoxModel comboBoxModelServices;
    private DefaultComboBoxModel comboBoxModelCategories;

    /**
     * Creates new form JDialogFicheSalarie
     *
     * @param parent fenêtre parente = fenêtre qui a affiché la fenêtre de
     * dialogue
     * @param modal =true si la fenêtre de dialogie doit être modale
     */
    public JDialogFicheSalarie(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        List<Service> lesServices;
        List<Categorie> lesCategories;
        try {
            lesServices = DaoService.getAll();
            lesCategories = DaoCategorie.getAll();
            comboBoxModelServices = new DefaultComboBoxModel(lesServices.toArray());
            comboBoxModelCategories = new DefaultComboBoxModel(lesCategories.toArray());
            jComboBoxService.setModel(comboBoxModelServices);
            jComboBoxCategorie.setModel(comboBoxModelCategories);
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(this.getParent(), "La liste des services n'a pu être obtenue"+ex.getMessage());
        }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitre = new javax.swing.JLabel();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jDateChooserNaissance = new com.toedter.calendar.JDateChooser();
        jButtonAnnuler = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButtonValider = new javax.swing.JButton();
        jDateChooserEmbauche = new com.toedter.calendar.JDateChooser();
        jButtonRetour = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldFonction = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTauxHoraire = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldSituationFamiliale = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNombreEnfants = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxCategorie = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxService = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonCreer = new javax.swing.JButton();
        jTextFieldPrenom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListFormations = new javax.swing.JList<>();
        jComboBoxListFormations = new javax.swing.JComboBox<>();
        labelFormations = new java.awt.Label();
        buttonAjouterFormations = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                JDialogFicheSalarie.this.windowClosing(evt);
            }
        });

        jLabelTitre.setText("Fiche salarié");

        jButtonModifier.setText("Modifier");

        jButtonSupprimer.setText("Supprimer");

        jButtonAnnuler.setText("Annuler");

        jLabel5.setText("Date d'embauche :");

        jButtonValider.setText("Valider");

        jButtonRetour.setText("Retour");
        jButtonRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetourActionPerformed(evt);
            }
        });

        jLabel6.setText("Fonction :");

        jLabel7.setText("Taux horaire :");

        jLabel8.setText("Situation familiale :");
        jLabel8.setToolTipText("");

        jLabel9.setText("Nombre d'enfants :");
        jLabel9.setToolTipText("");

        jLabel10.setText("Catégorie :");

        jLabel11.setText("Service :");

        jLabel1.setText("code :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel2.setText("nom :");

        jLabel3.setText("prénom :");

        jButtonCreer.setText("Créer");

        jLabel4.setText("Date de naissance :");

        jListFormations.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListFormations);

        jComboBoxListFormations.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelFormations.setText("Liste Formations : ");

        buttonAjouterFormations.setLabel("Ajouter");
        buttonAjouterFormations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAjouterFormationsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabelTitre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSituationFamiliale)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooserNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldFonction, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooserEmbauche, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldTauxHoraire, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNombreEnfants, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxService, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCreer)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(labelFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxListFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(buttonAjouterFormations, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonRetour))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonModifier)
                                .addGap(43, 43, 43)
                                .addComponent(jButtonSupprimer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAnnuler)
                                .addGap(41, 41, 41)
                                .addComponent(jButtonValider)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitre)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addComponent(jDateChooserNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooserEmbauche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldFonction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jTextFieldTauxHoraire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldSituationFamiliale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldNombreEnfants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBoxCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCreer)
                            .addComponent(jButtonModifier)
                            .addComponent(jButtonSupprimer)
                            .addComponent(jButtonAnnuler)
                            .addComponent(jButtonValider)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jComboBoxService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonRetour))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxListFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonAjouterFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetourActionPerformed
        retour();
    }//GEN-LAST:event_jButtonRetourActionPerformed

    private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
        retour();
    }//GEN-LAST:event_windowClosing

    private void buttonAjouterFormationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAjouterFormationsActionPerformed
        // TODO add your handling code here:
         // Récupérer la formation sélectionnée dans la JComboBox
        String selectedFormation = (String) jComboBoxListFormations.getSelectedItem();

        // Vérifiez si une formation est sélectionnée
        if (selectedFormation != null) {
            // Récupérer le code du salarié (assurez-vous que le code salarié est accessible)
            String codeSalarie = leSalarie.getCode(); // Assurez-vous que leSalarie est bien défini

            // Récupérer le modèle de la JList
            DefaultListModel<String> listModel = (DefaultListModel<String>) jListFormations.getModel();

            // Vérifiez si la formation est déjà dans la JList (éviter les doublons dans l'interface)
            if (listModel.contains(selectedFormation)) {
                JOptionPane.showMessageDialog(this, "La formation est déjà dans la liste.", "Alerte", JOptionPane.WARNING_MESSAGE);
                return; // Ne pas continuer si la formation est déjà présente
            }

            // Vérifiez et retirez "Aucune formation trouvée" si elle est présente
            String aucunMessage = "Aucune formation trouvée pour le salarié " + codeSalarie;
            if (listModel.contains(aucunMessage)) {
                listModel.removeElement(aucunMessage); // Supprime "Aucune formation trouvée" s'il est dans la liste
            }

            // Essayer d'insérer la formation dans la base de données
            try {
                DaoFormation.ajouterFormationPourSalarie(codeSalarie, selectedFormation); // Insertion en BDD

                // Si l'insertion réussit, ajouter la formation à la JList
                listModel.addElement(selectedFormation); // Ajoute la formation à jListFormations

                // Afficher un message de confirmation dans la console
                System.out.println("Formation ajoutée : " + selectedFormation);

            } catch (SQLException e) {
                // Si l'insertion échoue, afficher un message d'erreur sans ajouter la formation
                JOptionPane.showMessageDialog(this, "Erreur lors de l'ajout de la formation à la base de données, la formation est déjà existante : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(JDialogFicheSalarie.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            // Alerter l'utilisateur si aucune formation n'est sélectionnée
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une formation à ajouter.", "Alerte", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buttonAjouterFormationsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogFicheSalarie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogFicheSalarie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogFicheSalarie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogFicheSalarie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogFicheSalarie dialog = new JDialogFicheSalarie(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void modeVisualiser() {
        
        jTextFieldCode.setEditable(false);
        jTextFieldNom.setEditable(false);
        jTextFieldPrenom.setEditable(false);
        jDateChooserNaissance.setEnabled(false);
        jDateChooserEmbauche.setEnabled(false);
        jTextFieldFonction.setEditable(false);
        jTextFieldTauxHoraire.setEditable(false);
        jTextFieldSituationFamiliale.setEditable(false);
        jTextFieldNombreEnfants.setEditable(false);
        jListFormations.setEnabled(false); 
        jComboBoxCategorie.setEnabled(false);
        jComboBoxService.setEnabled(false);
        jButtonValider.setVisible(false);
        jButtonCreer.setVisible(false);
        jButtonModifier.setVisible(false);
        jButtonSupprimer.setVisible(false);
        jButtonAnnuler.setVisible(false);
        jButtonRetour.setVisible(true);        
    }

    public void remplirFormulaire() throws SQLException, IOException { 
        
            if (leSalarie == null) {
                System.out.println("Erreur : le salarié est null");
                return;
            }         
            jTextFieldCode.setText(leSalarie.getCode());
            jTextFieldNom.setText(leSalarie.getNom());
            jTextFieldPrenom.setText(leSalarie.getPrenom());
            jDateChooserNaissance.setDate(leSalarie.getDateNaiss());
            jDateChooserEmbauche.setDate(leSalarie.getDateEmbauche());
            jTextFieldFonction.setText(leSalarie.getFonction());
            jTextFieldTauxHoraire.setText(String.valueOf(leSalarie.getTauxHoraire()));
            jTextFieldSituationFamiliale.setText(leSalarie.getSituationFamiliale());
            jTextFieldNombreEnfants.setText(String.valueOf(leSalarie.getNbrEnfants()));
            int idxService = comboBoxModelServices.getIndexOf(leSalarie.getService());
            int idxCategorie = comboBoxModelCategories.getIndexOf(leSalarie.getCategorie());
            jComboBoxService.setSelectedIndex(idxService);
            jComboBoxCategorie.setSelectedIndex(idxCategorie);           
            
            DefaultListModel<String> listModel = new DefaultListModel<>();
            jListFormations.setModel(listModel); // Définir le modèle de la JList
            try {
                // Récupérer les formations pour le salarié sélectionné
                ArrayList<Formation> formations = DaoFormation.getFormationsBySalarie(leSalarie.getCode());

                // Vider le modèle avant de remplir pour éviter les doublons ou garder des éléments non souhaités
                listModel.clear();

                // Ajouter chaque formation au modèle de la JList
                if (formations.isEmpty()) {
                    // Si aucune formation n'est trouvée, ajouter le message dans la liste
                    listModel.addElement("Aucune formation trouvée pour le salarié " + leSalarie.getCode());
                } else {
                    // Si des formations existent, supprimer le message "Aucune formation trouvée" s'il a été ajouté auparavant
                    listModel.removeElement("Aucune formation trouvée pour le salarié " + leSalarie.getCode());

                    // Ajouter les formations trouvées dans la liste
                    for (Formation formation : formations) {
                        listModel.addElement(formation.getNom()); // Ajoute le nom de la formation
                    }
                }

                // Forcer la mise à jour de la JList
                jListFormations.revalidate();
                jListFormations.repaint();

            } catch (SQLException e) {
                System.err.println("Erreur lors de la récupération des formations : " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des formations : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }

            // Remplir la ComboBox avec les formations mises à jour
            remplirComboBoxFormations();

            }

    /**
     * Action permettant de quitter la fiche et de redonner le contrôle à la
     * fenêtre liste
     */
    public void retour() {
        this.setVisible(false);
        if (this.getParent() != null) {
            this.getParent().setEnabled(true);
            this.dispose();
        } else {
            // Pas de fenêtre mère => on arrête
            System.exit(0);
        }
    }
    
    public void remplirComboBoxFormations() throws SQLException, IOException {
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        jComboBoxListFormations.setModel(comboBoxModel); // Définir le modèle de la JComboBox

        try {
            // Récupérer toutes les formations
            ArrayList<Formation> formations = DaoFormation.getAllFormations();

            // Vérifiez si aucune formation n'a été trouvée
            if (formations.isEmpty()) {
                comboBoxModel.addElement("Aucune formation disponible.");
            } else {
                // Ajouter chaque formation au modèle de la JComboBox
                for (Formation formation : formations) {
                    comboBoxModel.addElement(formation.getNom()); // Ajoute le nom de la formation
                }
            }
        } catch (SQLException e) {
            System.err.println("Erreur lors de la récupération des formations : " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des formations : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonAjouterFormations;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRetour;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JButton jButtonValider;
    private javax.swing.JComboBox jComboBoxCategorie;
    private javax.swing.JComboBox<String> jComboBoxListFormations;
    private javax.swing.JComboBox jComboBoxService;
    private com.toedter.calendar.JDateChooser jDateChooserEmbauche;
    private com.toedter.calendar.JDateChooser jDateChooserNaissance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JList<String> jListFormations;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldFonction;
    private javax.swing.JTextField jTextFieldNom;
    private javax.swing.JTextField jTextFieldNombreEnfants;
    private javax.swing.JTextField jTextFieldPrenom;
    private javax.swing.JTextField jTextFieldSituationFamiliale;
    private javax.swing.JTextField jTextFieldTauxHoraire;
    private java.awt.Label labelFormations;
    // End of variables declaration//GEN-END:variables

    public Salarie getLeSalarie() {
        return leSalarie;
    }

    public void setLeSalarie(Salarie leSalarie) {
        this.leSalarie = leSalarie;
    }
}
